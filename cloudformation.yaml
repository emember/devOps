AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create
  an Amazon EC2 instance running the Amazon Linux AMI. The AMI is chosen based
  on the region in which the stack is run. This example creates an EC2 security
  group for the instance to give you SSH access. **WARNING** This template
  creates an Amazon EC2 instance. You will be billed for the AWS resources used
  if you create a stack from this template.
Parameters:
  InstallRegion:
    Type: String
    Description: region to setup all services
    Default: us-east-2
  Neo4jInstanceType:
    Description: Neo4j server EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
#  KeyName:
#    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
#    Type: 'AWS::EC2::KeyPair::KeyName'
#    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Resources:
  Neo4jEC2Instance:
    Type: 'AWS::EC2::Instance'
#    Metadata:
#      AWS::CloudFormation::Init:
#        configSets:
#          serverConfig:
#            - "installService"
#            - "startService"
#        installService:
#          packages:
#            yum:
#              awslogs: []
#          sources:
#            /etc/awslogs/: "https://s3.us-east-2.amazonaws.com/au-com-sst-test/cloudwatch.zip"
#        startService:
#          commands:
#            com1:
#              command: "sudo service awslogs start"
#            com2:
#              command: "sudo chkconfig awslogs on"
    Properties:
      InstanceType: !Ref Neo4jInstanceType
#      AvailabilityZone: !Ref InstallRegion
      BlockDeviceMappings:
        -
          DeviceName: "/dev/xvda"
          Ebs:
            SnapshotId: "snap-0e604be649ef4be15"
            VolumeSize: "20"
            VolumeType: "gp2"
            Iops: "1000"
            DeleteOnTermination: "true"
      SecurityGroupIds:
#        - "sg-088d9ff8542ffcd29"
        - "sg-3b1c4752"
#      KeyName: "cmDevKey"
      KeyName: "Speedshield-Kafka"
      ImageId: "ami-25615740"
#      UserData:
#        Fn::Base64:
#          !Sub |
#            #!/bin/bash -xe
#            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --configsets serverConfig --region ${AWS::Region}
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref Neo4jEC2Instance
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt 
      - Neo4jEC2Instance
      - AvailabilityZone